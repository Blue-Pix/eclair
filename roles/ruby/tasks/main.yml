- name: install git and other dependencies
  yum:
    name: "{{ item }}"
    state: latest
  with_items:
    - git
    - nss
    - nss-util
    - nspr
    - curl

- name: install rbenv
  git:
    repo: https://github.com/rbenv/rbenv.git
    dest: ~/.rbenv
  become_user: "{{ __working_user }}"

- name: set global rbenv path
  template:
    src: 001_rbenv.sh
    dest: ~/.bash.d/001_rbenv.sh
    mode: 0755
  become_user: "{{ __working_user }}"

- name: install dependencies for ruby build
  yum: 
    name: "{{ item }}"
    state: present
  with_items:
    - gcc
    - openssl-devel
    - libyaml-devel
    - libffi-devel
    - readline-devel
    - zlib-devel
    - gdbm-devel
    - ncurses-devel

- name: install ruby-build
  git:
    repo: https://github.com/sstephenson/ruby-build.git
    dest: ~/.rbenv/plugins/ruby-build
  become_user: "{{ __working_user }}"

- name: make app directory (if rails new)
  file:
    path: "{{ __app_dir }}"
    state: directory
    mode: 0755
  become_user: "{{ __working_user }}"
  when: __rails_new

- name: check current ruby version
  shell: |
    /bin/bash -lc "ruby -v | grep -oP '^ruby \d{1}.\d{1}.\d{1}' | cut -f 2 -d ' '"
  args:
    chdir: "{{ __app_dir }}"
  register: current_ruby_version
  become_user: "{{ __working_user }}"
  changed_when: False

- name: shell relogin
  shell: |
    /bin/bash -lc  "source ~/.bash_profile"
  become_user: "{{ __working_user }}"
  when: current_ruby_version.stdout != __version

- name: install ruby
  shell: |
    /bin/bash -lc "rbenv install {{ __version }}"
    /bin/bash -lc "gem install bundler"
    /bin/bash -lc "rbenv rehash"
    /bin/bash -lc "rbenv local {{ __version }}"
  args:
    chdir: "{{ __app_dir }}"
  become_user: "{{ __working_user }}"
  when: current_ruby_version.stdout != __version

- name: check rails new succeeded
  stat:
    path: "{{ __app_dir }}/Gemfile.lock"
  become_user: "{{ __working_user }}"
  register: rails_new_gemfile
  when: __rails_new

- name: init bundler
  shell: |
    /bin/bash -lc "bundle init"
  args:
    chdir: "{{ __app_dir }}"
  become_user: "{{ __working_user }}"
  when: __rails_new and not rails_new_gemfile.stat.exists

- name: gem install rails
  lineinfile:
    path: "{{ __app_dir }}/Gemfile"
    regexp: '# gem "rails"'
    line: 'gem "rails", "{{ __rails__version }}"'
  become_user: "{{ __working_user }}"
  when: __rails_new and not rails_new_gemfile.stat.exists

- name: rails new
  shell: |
    /bin/bash -lc "gem install bundler"
    /bin/bash -lc "rbenv rehash"
    /bin/bash -lc "bundle install --path vendor/bundle --jobs=4"
    /bin/bash -lc "bundle exec rails new -f {{ __app_dir }}"
  args:
    chdir: "{{ __app_dir }}"
  become_user: "{{ __working_user }}"
  when: __rails_new and not rails_new_gemfile.stat.exists

- name: bundle install (if app already exists)
  shell: |
    /bin/bash -lc "bundle install"
  args:
    chdir: "{{ __app_dir }}"
  become_user: "{{ __working_user }}"
  when: current_ruby_version.stdout != __version and not __rails_new
